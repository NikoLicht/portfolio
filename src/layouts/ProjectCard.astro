---
const {post} = Astro.props;
const cover = post.frontmatter.cover;
const role = post.frontmatter.role;
const technologies = post.frontmatter.tech;

console.log("looking for: " + cover);
let coverImg : any;

let images = await Astro.glob('../images/projects/**/*.{png,jpeg,jpg,gif,webp}').then(files => {
    files.map((checkFile) => {
        let match = checkFile.default;
        //console.log("Checking match between " + cover + " and " + match);
    });
    return files.filter(file => file.default.includes(cover));
}).then( matches => {
    //console.log(matches.length + " is lenght of matching images");
    coverImg = matches[0].default;
    //console.log(coverImg);
});

---

<a href={post.url} class="project">
    <img src={coverImg} alt={"An awesome-looking cover photo for '" + post.frontmatter.title + "'"}>
    <p class="project-title">{post.frontmatter.title}</p>
    <div class="project-roles">
        <p class="role slanted-box">{role}</p>
    </div>
    <div class="project-summary-wrapper">
        <p class="project-summary">{post.frontmatter.summary}</p>
    </div>
    <div class="project-tech">
        {
            technologies.map((tech :string) => {
                return <p class="tech slanted-box">{tech}</p>
            })
        }
    </div>
</a>

<style>
    .project {
        background-color: var(--egg-color);
        padding: 1vw 1vw 1vw 1vw;
        text-decoration:none;
        transition: background-color 0.3s ease-in-out;
        max-width:23%;
        min-width: 200px;

        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    a{
        text-decoration: none;
        color: inherit;
    }

    .project:hover {
        color: var(--egg-color);
        background-color: var(--dark-color);
    }

    .project:hover .project-roles .role{
            color: var(--egg-color);
            text-decoration: underline var(--egg-color);
    }

    .project:hover .project-tech .tech{
        background-color: var(--medium-dark);
        color: var(--dark-color);
    }

    img {
        width: 100%;
        aspect-ratio: 1 / 1;
        object-fit: cover;
        min-width: min(150px, 100%);
    }

    .project-title {
        font-size: 1.5em;
        text-transform: uppercase;
        font-weight: 600;
        margin: 0;
    }

    .project-summary-wrapper{

        display: flex;
        flex-direction: column;
        align-items: center;
        flex-grow: 2;

    }
    .project-summary {
        font-size: .9em;
    }


    .project-tech {
        list-style-type: none;
        margin: auto;
        padding: 0;
        text-align: center;
        margin-bottom: 0;


        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: flex-end;
        flex-direction: row-reverse;
        align-content: flex-end;
        gap: 2px;
        

    }

    .tech{

        color: var(--egg-color);
        background-color: var(--dark-color);
        min-width: 3rem;
        padding-left: 1rem;
        padding-right: 1rem;
        margin: 0;
        flex-grow: 1;
    }

    .project-roles {
        list-style-type: none;
        margin: auto;
        padding: 0;
        width: 100%;

        .role{
            text-decoration: underline;
            color: var(--dark-color);
            margin: 0;
            padding: 0;
            float: right;

        }
    }

    .slanted-box :global{
        transform: skewX(-15deg);
        background-color: var(--dark-color);
        display: inline-block;
        padding-left: 1em;
        padding-right: 1em;
        color: var(--light-color);
    }


    @media only screen and (max-width: 600px) and (orientation: portrait) {
    .project {
        width: 100%;
        min-width: 100%;
        max-width: 100%;
        padding: 0;
        padding: 1em;
        margin-bottom: 2em;
    }

    .project-title{
        font-size:6vi;
        text-transform: uppercase;
    }

    .project-summary{
        font-size: 4vi;
    }

</style>

